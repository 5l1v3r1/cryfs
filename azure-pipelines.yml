# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

pool:
  vmImage: 'VS2017-Win2016'

steps:
- bash: choco install -y wget
  displayName: 'Install wget'
- bash: |
    # Detect number of CPU cores
    export NUMCORES=`nproc`
    echo Using $NUMCORES cores
    # Download and prepare boost (only if not already present from cache)
    if [ ! -d "/tmp/boost_1_69_0" ]; then
      echo "Didn't find boost in cache. Downloading and building."
      wget -O /tmp/boost.zip https://dl.bintray.com/boostorg/release/1.69.0/source/boost_1_69_0.zip
      if [ $(sha256sum /tmp/boost.zip | awk '{print $1;}') == "d074bcbcc0501c4917b965fc890e303ee70d8b01ff5712bae4a6c54f2b6b4e52" ]; then
        echo Correct sha512sum
      else
        echo Wrong sha512sum
        sha512sum boost.zip
        exit 1
      fi
      echo Extracting...
      unzip /tmp/boost.zip -d /tmp
      rm -rf boost.zip
      cd /tmp/boost_1_69_0
      ./bootstrap.sh --toolset=msvc --with-libraries=filesystem,thread,chrono,program_options
      cat bootstrap.log
      cd ..
    else
      echo Found boost in cache. Use cache and build.
    fi
    # Compile and install boost (if cached, this should be fast)
    cd /tmp/boost_1_69_0
    ./b2 toolset=msvc link=static cxxflags=-fPIC -d0 -j$NUMCORES install
  displayName: 'Install Boost'

- bash: choco install -y dokany --version 1.1.0.2000 --installargs INSTALLDEVFILES=1 || exit 0
  displayName: 'Install DokanY'

- task: CMake@1
  inputs:
    cmakeArgs: .. -DBUILD_TESTING=on
